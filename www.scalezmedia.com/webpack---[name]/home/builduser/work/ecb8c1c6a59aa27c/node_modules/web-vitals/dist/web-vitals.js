var e, n, t, i, r, a = !1,
    o = function(e) {
        addEventListener("pageshow", (function(n) {
            n.persisted && (a = !0, e(n))
        }), !0)
    },
    c = function() {
        return window.performance && (performance.getEntriesByType && performance.getEntriesByType("navigation")[0] || function() {
            var e = performance.timing,
                n = {
                    entryType: "navigation",
                    startTime: 0
                };
            for (var t in e) "navigationStart" !== t && "toJSON" !== t && (n[t] = Math.max(e[t] - e.navigationStart, 0));
            return n
        }())
    },
    u = function(e, n) {
        var t = c();
        return {
            name: e,
            value: void 0 === n ? -1 : n,
            delta: 0,
            entries: [],
            id: "v2-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12),
            navigationType: a ? "back_forward_cache" : t && t.type
        }
    },
    f = function(e, n, t) {
        try {
            if (PerformanceObserver.supportedEntryTypes.includes(e)) {
                var i = new PerformanceObserver((function(e) {
                    n(e.getEntries())
                }));
                return i.observe(Object.assign({
                    type: e,
                    buffered: !0
                }, t || {})), i
            }
        } catch (e) {}
    },
    s = function(e, n) {
        var t = function t(i) {
            "pagehide" !== i.type && "hidden" !== document.visibilityState || (e(i), n && (removeEventListener("visibilitychange", t, !0), removeEventListener("pagehide", t, !0)))
        };
        addEventListener("visibilitychange", t, !0), addEventListener("pagehide", t, !0)
    },
    l = function(e, n, t) {
        var i;
        return function(r) {
            n.value >= 0 && (r || t) && (n.delta = n.value - (i || 0), (n.delta || void 0 === i) && (i = n.value, e(n)))
        }
    },
    d = -1,
    v = function() {
        return "hidden" === document.visibilityState ? 0 : 1 / 0
    },
    p = function() {
        s((function(e) {
            var n = e.timeStamp;
            d = n
        }), !0)
    },
    m = function() {
        return d < 0 && (d = v(), p(), o((function() {
            setTimeout((function() {
                d = v(), p()
            }), 0)
        }))), {
            get firstHiddenTime() {
                return d
            }
        }
    },
    h = function(e, n) {
        n = n || {};
        var t, i = m(),
            r = u("FCP"),
            a = function(e) {
                e.forEach((function(e) {
                    "first-contentful-paint" === e.name && (s && s.disconnect(), e.startTime < i.firstHiddenTime && (r.value = e.startTime, r.entries.push(e), t(!0)))
                }))
            },
            c = window.performance && window.performance.getEntriesByName && window.performance.getEntriesByName("first-contentful-paint")[0],
            s = c ? null : f("paint", a);
        (c || s) && (t = l(e, r, n.reportAllChanges), c && a([c]), o((function(i) {
            r = u("FCP"), t = l(e, r, n.reportAllChanges), requestAnimationFrame((function() {
                requestAnimationFrame((function() {
                    r.value = performance.now() - i.timeStamp, t(!0)
                }))
            }))
        })))
    },
    g = !1,
    y = -1,
    T = function(e, n) {
        n = n || {}, g || (h((function(e) {
            y = e.value
        })), g = !0);
        var t, i = function(n) {
                y > -1 && e(n)
            },
            r = u("CLS", 0),
            a = 0,
            c = [],
            d = function(e) {
                e.forEach((function(e) {
                    if (!e.hadRecentInput) {
                        var n = c[0],
                            i = c[c.length - 1];
                        a && e.startTime - i.startTime < 1e3 && e.startTime - n.startTime < 5e3 ? (a += e.value, c.push(e)) : (a = e.value, c = [e]), a > r.value && (r.value = a, r.entries = c, t())
                    }
                }))
            },
            v = f("layout-shift", d);
        v && (t = l(i, r, n.reportAllChanges), s((function() {
            d(v.takeRecords()), t(!0)
        })), o((function() {
            a = 0, y = -1, r = u("CLS", 0), t = l(i, r, n.reportAllChanges)
        })))
    },
    E = {
        passive: !0,
        capture: !0
    },
    w = new Date,
    C = function(i, r) {
        e || (e = r, n = i, t = new Date, A(removeEventListener), S())
    },
    S = function() {
        if (n >= 0 && n < t - w) {
            var r = {
                entryType: "first-input",
                name: e.type,
                target: e.target,
                cancelable: e.cancelable,
                startTime: e.timeStamp,
                processingStart: e.timeStamp + n
            };
            i.forEach((function(e) {
                e(r)
            })), i = []
        }
    },
    L = function(e) {
        if (e.cancelable) {
            var n = (e.timeStamp > 1e12 ? new Date : performance.now()) - e.timeStamp;
            "pointerdown" == e.type ? function(e, n) {
                var t = function() {
                        C(e, n), r()
                    },
                    i = function() {
                        r()
                    },
                    r = function() {
                        removeEventListener("pointerup", t, E), removeEventListener("pointercancel", i, E)
                    };
                addEventListener("pointerup", t, E), addEventListener("pointercancel", i, E)
            }(n, e) : C(n, e)
        }
    },
    A = function(e) {
        ["mousedown", "keydown", "touchstart", "pointerdown"].forEach((function(n) {
            return e(n, L, E)
        }))
    },
    b = function(t, r) {
        r = r || {};
        var a, c = m(),
            d = u("FID"),
            v = function(e) {
                e.startTime < c.firstHiddenTime && (d.value = e.processingStart - e.startTime, d.entries.push(e), a(!0))
            },
            p = function(e) {
                e.forEach(v)
            },
            h = f("first-input", p);
        a = l(t, d, r.reportAllChanges), h && s((function() {
            p(h.takeRecords()), h.disconnect()
        }), !0), h && o((function() {
            var o;
            d = u("FID"), a = l(t, d, r.reportAllChanges), i = [], n = -1, e = null, A(addEventListener), o = v, i.push(o), S()
        }))
    },
    F = 0,
    I = 1 / 0,
    P = 0,
    k = function(e) {
        e.forEach((function(e) {
            e.interactionId && (I = Math.min(I, e.interactionId), P = Math.max(P, e.interactionId), F = P ? (P - I) / 7 + 1 : 0)
        }))
    },
    M = function() {
        return r ? F : performance.interactionCount || 0
    },
    B = function() {
        "interactionCount" in performance || r || (r = f("event", k, {
            type: "event",
            buffered: !0,
            durationThreshold: 0
        }))
    },
    D = 0,
    N = function() {
        return M() - D
    },
    R = [],
    q = {},
    x = function(e, n) {
        n = n || {}, B();
        var t, i = u("INP"),
            r = function(e) {
                e.forEach((function(e) {
                    e.interactionId && function(e) {
                        var n = R[R.length - 1],
                            t = q[e.interactionId];
                        if (t || R.length < 10 || e.duration > n.latency) {
                            if (t) t.entries.push(e), t.latency = Math.max(t.latency, e.duration);
                            else {
                                var i = {
                                    id: e.interactionId,
                                    latency: e.duration,
                                    entries: [e]
                                };
                                q[i.id] = i, R.push(i)
                            }
                            R.sort((function(e, n) {
                                return n.latency - e.latency
                            })), R.splice(10).forEach((function(e) {
                                delete q[e.id]
                            }))
                        }
                    }(e)
                }));
                var n, r = (n = Math.min(R.length - 1, Math.floor(N() / 50)), R[n]);
                r && r.latency !== i.value && (i.value = r.latency, i.entries = r.entries, t())
            },
            a = f("event", r, {
                durationThreshold: n.durationThreshold || 40
            });
        t = l(e, i, n.reportAllChanges), a && (s((function() {
            r(a.takeRecords()), i.value < 0 && N() > 0 && (i.value = 0, i.entries = []), t(!0)
        })), o((function() {
            R = [], D = M(), i = u("INP"), t = l(e, i, n.reportAllChanges)
        })))
    },
    H = {},
    O = function(e, n) {
        n = n || {};
        var t, i = m(),
            r = u("LCP"),
            a = function(e) {
                var n = e[e.length - 1];
                if (n) {
                    var a = n.startTime;
                    a < i.firstHiddenTime && (r.value = a, r.entries = [n], t())
                }
            },
            c = f("largest-contentful-paint", a);
        if (c) {
            t = l(e, r, n.reportAllChanges);
            var d = function() {
                H[r.id] || (a(c.takeRecords()), c.disconnect(), H[r.id] = !0, t(!0))
            };
            ["keydown", "click"].forEach((function(e) {
                addEventListener(e, d, {
                    once: !0,
                    capture: !0
                })
            })), s(d, !0), o((function(i) {
                r = u("LCP"), t = l(e, r, n.reportAllChanges), requestAnimationFrame((function() {
                    requestAnimationFrame((function() {
                        r.value = performance.now() - i.timeStamp, H[r.id] = !0, t(!0)
                    }))
                }))
            }))
        }
    },
    _ = function(e, n) {
        n = n || {};
        var t, i = u("TTFB"),
            r = l(e, i, n.reportAllChanges);
        t = function() {
            var e = c();
            if (e) {
                if (i.value = e.responseStart, i.value < 0 || i.value > performance.now()) return;
                i.entries = [e], r(!0)
            }
        }, "complete" === document.readyState ? setTimeout(t, 0) : addEventListener("load", (function() {
            return setTimeout(t, 0)
        })), o((function(t) {
            i = u("TTFB"), r = l(e, i, n.reportAllChanges), i.value = performance.now() - t.timeStamp, r(!0)
        }))
    };
export {
    T as getCLS, h as getFCP, b as getFID, x as getINP, O as getLCP, _ as getTTFB, T as onCLS, h as onFCP, b as onFID, x as onINP, O as onLCP, _ as onTTFB
};