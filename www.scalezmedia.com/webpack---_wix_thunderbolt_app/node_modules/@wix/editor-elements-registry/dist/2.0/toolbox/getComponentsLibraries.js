"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getComponentsLibraries = exports.getComponentsLibrariesFromURL = exports.whitelist = void 0;
const getComponentsLibrariesFromURL_1 = require("./getComponentsLibrariesFromURL");
Object.defineProperty(exports, "getComponentsLibrariesFromURL", {
    enumerable: true,
    get: function() {
        return getComponentsLibrariesFromURL_1.getComponentsLibrariesFromURL;
    }
});
/**
 * This is a temp source of truth until a better alternative is supplied via DevCenter or something similar
 */
exports.whitelist = [{
        artifactId: 'editor-elements',
        namespace: 'wixui',
    },
    {
        artifactId: 'editor-elements',
        namespace: 'dsgnsys',
    },
];
/**
 * Will return list of components libraries with actual urls to each one of them.
 * In case when "serviceTopology" is not provided a whitelist of libraries
 * without urls will be returned
 */
const getComponentsLibraries = (serviceTopology, url, prefix) => {
    const urlLibraries = [];
    if (url) {
        urlLibraries.push(...getComponentsLibrariesFromURL_1.getComponentsLibrariesFromURL(url, prefix));
    }
    if (!serviceTopology) {
        return [...urlLibraries];
    }
    const topologyLibraries = exports.whitelist.reduce((acc, lib) => {
        const {
            artifactId
        } = lib;
        const libraryEntryInTopology = serviceTopology[artifactId] ||
            serviceTopology.scriptsLocationMap[artifactId];
        if (typeof libraryEntryInTopology === 'string') {
            acc.push(Object.assign(Object.assign({}, lib), {
                url: libraryEntryInTopology
            }));
        }
        return acc;
    }, []);
    return [...topologyLibraries, ...urlLibraries];
};
exports.getComponentsLibraries = getComponentsLibraries;
//# sourceMappingURL=getComponentsLibraries.js.map