var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArrays = (this && this.__spreadArrays) || function() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import {
    convertSiteLevelMetaTags
} from '../../converters/convert-site-level-meta-tags';
import {
    getUserPatternByItemType
} from '../../patterns/get-user-pattern-by-item-type';
import {
    getContext
} from '../../tags/context/get-context';
import {
    STATIC_PAGE_V2
} from '../../types/ItemTypes';
import {
    filterPageLevelTags
} from '../../tags/filters/filter-page-level-tags';
import {
    getAdapter
} from '../../adapters/index';
import {
    convertSeoModel
} from '../../converters/convert-seo-model';
import {
    resolveWithPatterns
} from '../resolve-with-patterns';
import {
    sort
} from '../sort';
import {
    getDefaultItemPayload
} from '../../patterns/get-default-item';
import {
    handleOldBlog
} from '../../item-types/blog-post/handleOldBlogPost/handle-old-blog-post';
import {
    CONTEXT_PROPS
} from '../../types/ContextProps';
import {
    filterPayloadWithoutVelo
} from '../../tags/filters/filter-payload-without-velo';
import {
    convertComponentsItemPayload
} from '../convert-components-item-payload';
import {
    getDefaultPatternsSchemas
} from '../get-default-patterns-schemas';
import {
    getDynamicPatternsSchema
} from '../get-dynamic-patterns-schema';
import {
    getMultilingualSchemaFromContext
} from '../get-multilingual-tags';
import {
    hasAdapterMultilingualData
} from '../has-adapter-multilingual-data';
import {
    experimentEnabled
} from '../../adapters/experimentEnabled';
import {
    resolvePayload
} from '../resolve-payload';
import {
    shouldRenderMultilingualTags
} from '../should-render-multilingual-tags';
import {
    logInfo
} from '../../utils/log-info';
import {
    getPatternBlob
} from '../../patterns';

function _getEditorPayload(context, pageLevelSeoData, staticPageAdapter) {
    var editorPanelLegacyData = staticPageAdapter.getLegacySeoBlob({
        context: context,
    });
    var editorPanelPageData = convertSeoModel(pageLevelSeoData.advancedSeoData);
    return [editorPanelLegacyData, editorPanelPageData];
}

function _getUserPatternPayload(siteLevelSeoData, itemType, options) {
    if (options === void 0) {
        options = {
            logError: function() {}
        };
    }
    var userPatternSchema = getUserPatternByItemType(siteLevelSeoData.userPatterns, itemType, options);
    var _a = itemType === STATIC_PAGE_V2 ?
        [userPatternSchema, {}] :
        [{}, userPatternSchema],
        userStaticPatternSchema = _a[0],
        userDynamicPatternSchema = _a[1];
    return {
        userPatternSchema: userPatternSchema,
        userStaticPatternSchema: userStaticPatternSchema,
        userDynamicPatternSchema: userDynamicPatternSchema,
    };
}

function _getPlatformPayload(adapter, itemData, seoData, isOriginalLang) {
    if (isOriginalLang === void 0) {
        isOriginalLang = true;
    }
    var platformLegacySeoOverrides = adapter.getLegacySeoBlob(itemData);
    var platformSchemaOverrides = seoData;
    return isOriginalLang ?
        [platformLegacySeoOverrides, platformSchemaOverrides] :
        [platformSchemaOverrides, platformLegacySeoOverrides];
}
export function _getTags(_a) {
    var _b = _a === void 0 ? {} : _a,
        _c = _b.siteLevelSeoData,
        siteLevelSeoData = _c === void 0 ? {} : _c,
        _d = _b.pageLevelSeoData,
        pageLevelSeoData = _d === void 0 ? {} : _d,
        _e = _b.veloOverrides,
        veloOverrides = _e === void 0 ? [] : _e,
        _f = _b.veloItemPayload,
        veloItemPayload = _f === void 0 ? getDefaultItemPayload() : _f,
        _g = _b.dynamicPageData,
        dynamicPageData = _g === void 0 ? [] : _g,
        _h = _b.tpaSeoEndpointData,
        tpaSeoEndpointData = _h === void 0 ? [] : _h,
        _j = _b.tpaOverrides,
        tpaOverrides = _j === void 0 ? [] : _j,
        _k = _b.componentsItemPayload,
        componentsItemPayload = _k === void 0 ? [] : _k,
        _l = _b.options,
        options = _l === void 0 ? {
            logError: function() {}
        } : _l,
        staticPagePatternBlob = _b.staticPagePatternBlob,
        staticPageAdapter = _b.staticPageAdapter,
        itemTypePatternBlob = _b.itemTypePatternBlob,
        adapter = _b.adapter;
    var itemType = veloItemPayload.itemType,
        itemData = veloItemPayload.itemData,
        seoData = veloItemPayload.seoData,
        asNewPage = veloItemPayload.asNewPage;
    var siteLevelMetaTags = filterPageLevelTags(convertSiteLevelMetaTags(siteLevelSeoData.metaTags));
    logInfo(options, {
        itemType: itemType,
        itemTypePatternBlob: itemTypePatternBlob,
        staticPagePatternBlob: staticPagePatternBlob
    }, 'getDefaultPatternsSchemas');
    var _m = getDefaultPatternsSchemas(itemType, itemTypePatternBlob, staticPagePatternBlob),
        defaultStaticPatternSchema = _m[0],
        defaultDynamicPatternSchema = _m[1];
    logInfo(options, {
        defaultStaticPatternSchema: defaultStaticPatternSchema,
        defaultDynamicPatternSchema: defaultDynamicPatternSchema,
        itemType: itemType
    }, '_getUserPatternPayload');
    var _o = _getUserPatternPayload(siteLevelSeoData, itemType, options),
        userPatternSchema = _o.userPatternSchema,
        userStaticPatternSchema = _o.userStaticPatternSchema,
        userDynamicPatternSchema = _o.userDynamicPatternSchema;
    logInfo(options, {
        userPatternSchema: userPatternSchema,
        userStaticPatternSchema: userStaticPatternSchema,
        userDynamicPatternSchema: userDynamicPatternSchema,
        itemType: itemType
    }, 'getContext');
    var context = getContext(siteLevelSeoData, pageLevelSeoData, userPatternSchema);
    var itemDataWithContext = __assign(__assign({}, itemData), {
        context: context
    });
    var platformPayload = _getPlatformPayload(adapter, itemData, seoData, context[CONTEXT_PROPS.CURR_LANG_IS_ORIGINAL]);
    var staticPatterns = [defaultStaticPatternSchema, userStaticPatternSchema];
    var dynamicSchemaFromAdapter = getDynamicPatternsSchema(adapter, itemDataWithContext);
    logInfo(options, {
        dynamicSchemaFromAdapter: dynamicSchemaFromAdapter,
        adapter: adapter,
        itemDataWithContext: itemDataWithContext
    }, 'hasAdapterMultilingualData');
    var hasMultilingualData = hasAdapterMultilingualData(adapter, itemDataWithContext);
    var dynamicPatterns = [
        defaultDynamicPatternSchema,
        dynamicSchemaFromAdapter,
        userDynamicPatternSchema,
    ];
    var payload = [];
    var adaptedContext = __assign({}, adapter.getData(itemDataWithContext));
    var isNewHrefLogic = experimentEnabled('specs.seo.NewHreflangLogic', context);
    // While merging specs.seo.NewHreflangLogic please remove multilingualTags from payloads, as it dynamically added later
    var multilingualTags = !isNewHrefLogic &&
        !hasMultilingualData &&
        getMultilingualSchemaFromContext(itemDataWithContext, {
            translationsData: pageLevelSeoData === null || pageLevelSeoData === void 0 ? void 0 : pageLevelSeoData.translationsData,
        });
    if (asNewPage) {
        payload = __spreadArrays([
            siteLevelMetaTags,
            multilingualTags
        ], staticPatterns, dynamicPatterns, platformPayload);
        logInfo(options, {
            payload: payload
        }, 'asNewPage');
    } else {
        var _p = convertComponentsItemPayload({
                componentsItemPayload: componentsItemPayload,
                context: context,
            }),
            componentsTags = _p.componentsTags,
            componentContext = _p.componentContext;
        var editorPanelPayload = _getEditorPayload(context, pageLevelSeoData, staticPageAdapter);
        adaptedContext = __assign(__assign({}, adaptedContext), componentContext);
        payload = __spreadArrays([
            siteLevelMetaTags,
            multilingualTags
        ], staticPatterns, editorPanelPayload, dynamicPatterns, componentsTags, [
            dynamicPageData,
            tpaSeoEndpointData,
            tpaOverrides
        ], platformPayload);
        logInfo(options, {
            payload: payload
        }, 'filterPayloadWithoutVelo');
        payload = [filterPayloadWithoutVelo(payload, veloOverrides), veloOverrides];
    }
    if (isNewHrefLogic) {
        var resolvedTags = resolveWithPatterns(payload, adaptedContext, options);
        resolvedTags = handleOldBlog(resolvedTags, siteLevelSeoData);
        if (shouldRenderMultilingualTags({
                tags: resolvedTags.tags,
                itemType: itemType,
                hasMultilingualData: hasMultilingualData,
                veloOverrides: veloOverrides,
                context: context,
            })) {
            multilingualTags = getMultilingualSchemaFromContext(itemDataWithContext, {
                translationsData: pageLevelSeoData === null || pageLevelSeoData === void 0 ? void 0 : pageLevelSeoData.translationsData,
            });
            resolvedTags = resolvePayload([multilingualTags, resolvedTags], options);
            resolvedTags.tags = sort(resolvedTags.tags);
        }
        return resolvedTags;
    } else {
        var resolvedTags = resolveWithPatterns(payload, adaptedContext, options);
        return handleOldBlog(resolvedTags, siteLevelSeoData);
    }
}
export function getTags(_a) {
    var _b = _a === void 0 ? {} : _a,
        _c = _b.siteLevelSeoData,
        siteLevelSeoData = _c === void 0 ? {} : _c,
        _d = _b.pageLevelSeoData,
        pageLevelSeoData = _d === void 0 ? {} : _d,
        _e = _b.veloOverrides,
        veloOverrides = _e === void 0 ? [] : _e,
        _f = _b.veloItemPayload,
        veloItemPayload = _f === void 0 ? getDefaultItemPayload() : _f,
        _g = _b.dynamicPageData,
        dynamicPageData = _g === void 0 ? [] : _g,
        _h = _b.tpaSeoEndpointData,
        tpaSeoEndpointData = _h === void 0 ? [] : _h,
        _j = _b.tpaOverrides,
        tpaOverrides = _j === void 0 ? [] : _j,
        _k = _b.componentsItemPayload,
        componentsItemPayload = _k === void 0 ? [] : _k,
        _l = _b.options,
        options = _l === void 0 ? {
            logError: function() {}
        } : _l;
    var itemType = veloItemPayload.itemType;
    var staticPagePatternBlob = getPatternBlob(STATIC_PAGE_V2);
    var staticPageAdapter = getAdapter(STATIC_PAGE_V2);
    var itemTypePatternBlob = getPatternBlob(itemType);
    var adapter = getAdapter(itemType);
    componentsItemPayload = componentsItemPayload.map(function(componentItemPayload) {
        return __assign({
            patternBlob: getPatternBlob(componentItemPayload.itemType),
            adapter: getAdapter(componentItemPayload.itemType)
        }, componentItemPayload);
    });
    return _getTags({
        siteLevelSeoData: siteLevelSeoData,
        pageLevelSeoData: pageLevelSeoData,
        veloOverrides: veloOverrides,
        veloItemPayload: veloItemPayload,
        dynamicPageData: dynamicPageData,
        tpaSeoEndpointData: tpaSeoEndpointData,
        tpaOverrides: tpaOverrides,
        componentsItemPayload: componentsItemPayload,
        options: options,
        staticPagePatternBlob: staticPagePatternBlob,
        staticPageAdapter: staticPageAdapter,
        itemTypePatternBlob: itemTypePatternBlob,
        adapter: adapter,
    });
}