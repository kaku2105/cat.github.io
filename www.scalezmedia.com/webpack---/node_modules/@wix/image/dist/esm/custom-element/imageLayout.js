import {
    getScreenHeight,
    setStyle,
    getImageComputedProperties,
    getImageSrc,
} from './utils';
const MOBILE_SAFE_ADDRESSBAR_HEIGHT = 80;

function getHeightOverride(height, mediaHeightOverrideType) {
    // on mobile, documentElement.clientHeight changes when scrolling, because of address bar collapsing.
    // avoiding re-fetching image by returning the same height
    return mediaHeightOverrideType === 'fixed' ?
        document.documentElement.clientHeight + MOBILE_SAFE_ADDRESSBAR_HEIGHT :
        height;
}
/**
 * siteBackground on mobile specific overrides
 */
function computeStyleOverrides(mediaHeightOverrideType, imageStyle, displayMode) {
    if (!mediaHeightOverrideType) {
        return imageStyle;
    }
    const style = Object.assign({}, imageStyle);
    if (displayMode === 'fill') {
        style.position = 'absolute';
        style.top = '0';
    } else if (displayMode === 'fit') {
        style.height = '100%';
    }
    if (mediaHeightOverrideType === 'fixed') {
        // eliminates white gap when address bar is collapsing
        style['will-change'] = 'transform';
    }
    // force image alignment to include top
    if (style.objectPosition) {
        style.objectPosition = imageStyle.objectPosition.replace(/(center|bottom)$/, 'top');
    }
    return style;
}

function measure(id, measures, domNodes, {
    containerElm,
    mediaHeightOverrideType,
    bgEffectName = 'none',
}, services) {
    var _a;
    const innerImage = domNodes.image;
    const wixImage = domNodes[id];
    const screenHeight = getScreenHeight();
    const sourceOfDimensions = (containerElm && bgEffectName !== 'none' ? containerElm : wixImage); // default to self
    const {
        width,
        height
    } = ((_a = services.getMediaDimensionsByEffect) === null || _a === void 0 ? void 0 : _a.call(services, bgEffectName, sourceOfDimensions.offsetWidth, sourceOfDimensions.offsetHeight, screenHeight)) || {
        width: wixImage.offsetWidth,
        height: wixImage.offsetHeight,
    };
    if (!innerImage) {
        return;
    }
    const imgSrc = getImageSrc(innerImage);
    measures.width = width;
    measures.height = getHeightOverride(height, mediaHeightOverrideType);
    measures.screenHeight = screenHeight;
    measures.imgSrc = imgSrc;
    measures.boundingRect = wixImage.getBoundingClientRect();
    measures.mediaHeightOverrideType = mediaHeightOverrideType;
}

function patch(id, measures, domNodes, imageInfo, services, envConsts, loadImage, bgEffectName) {
    var _a;
    if (!Object.keys(measures).length) {
        return;
    }
    const {
        imageData
    } = imageInfo;
    const wixImageNode = domNodes[id];
    const image = domNodes.image;
    // no retina scaling for background scroll effects
    if (bgEffectName) {
        imageData.devicePixelRatio = 1;
    }
    const extendedImageInfo = Object.assign(Object.assign({
        targetWidth: measures.width,
        targetHeight: measures.height
    }, imageInfo), {
        displayMode: imageData.displayMode
    });
    const imageComputedProperties = getImageComputedProperties(extendedImageInfo, envConsts, 'img');
    const computedStyle = ((_a = imageComputedProperties === null || imageComputedProperties === void 0 ? void 0 : imageComputedProperties.css) === null || _a === void 0 ? void 0 : _a.img) || {};
    const imageStyle = computeStyleOverrides(measures.mediaHeightOverrideType, computedStyle, imageData.displayMode);
    setStyle(image, imageStyle);
    const src = imageComputedProperties === null || imageComputedProperties === void 0 ? void 0 : imageComputedProperties.uri;
    wixImageNode.setAttribute('data-src', src || '');
    // clear initial indication that the image src came from ssr render
    wixImageNode.setAttribute('data-has-ssr-src', '');
    if (imageInfo.isLQIP &&
        imageInfo.lqipTransition &&
        !('transitioned' in wixImageNode.dataset)) {
        wixImageNode.dataset.transitioned = '';
        if (image.complete) {
            image.onload = function() {
                image.dataset.loadDone = '';
            };
        } else {
            image.onload = function() {
                if (image.complete) {
                    image.dataset.loadDone = '';
                } else {
                    image.onload = function() {
                        image.dataset.loadDone = '';
                    };
                }
            };
        }
    }
    if (loadImage) {
        services.imageLoader.loadImage(wixImageNode, {
            screenHeight: measures.screenHeight,
            boundingRect: measures.boundingRect,
        });
    }
}
export default {
    measure,
    patch,
};
//# sourceMappingURL=imageLayout.js.map